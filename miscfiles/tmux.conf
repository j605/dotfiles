# Reset Prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix # to send C-a to applications within tmux

# Options {{{
# Mouse on
set-window-option -g mouse on
# Set terminal
set-option -g default-terminal "tmux-256color"
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Ring the bell if any background window ring a bell
set-option -g bell-action any
# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set-option -g status-keys vi
# Use vi keybindings in copy and choice modes
set-window-option -g mode-keys vi
# Renumber windows
set-option -g renumber-windows on
# For mac pasteboard
set-option -g default-command 'reattach-to-user-namespace-tmux -l "$SHELL"'
# Set that stupid Esc-Wait off (increases vim responsiveness)
set-option -sg  escape-time 0
# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
# Bigger history
set-option -g history-limit 10000
# I almost never want to stop at - or _ in words
set-option -g word-separators ' @'
# }}}

# From http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/{{{
######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-fg black
set -g pane-active-border-fg brightred

## Status bar design
# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-fg black
set -g message-bg yellow
set -g message-command-fg blue
set -g message-command-bg black

#window mode
setw -g mode-bg colour6
setw -g mode-fg colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour196
setw -g mode-bg colour238

# }
# The panes {

set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-attr dim
set -g status-left '[#S]'
set -g status-right ''
# set -g status-right '#[fg=colour108,bg=colour236,bold]#(cut -d" " -f1-3 /proc/loadavg) #[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S'
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1

# }
# The messages {

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

# }
# }}}

# Key Bindings {{{
# Global {{{
# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display-message ".tmux.conf reloaded."

# Open new windows/panes with current directory
bind-key c run-shell 'tmux new-window "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key | run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key - run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s run-shell 'tmux split-window -v "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'
bind-key v run-shell 'tmux split-window -h "cd $(tmux display -p "\$TMUXPWD_#S_#I_#P"); exec $SHELL"'

# Window {{{
bind-key -r C-l select-window -t :+
bind-key -r C-h select-window -t :-

bind-key -r > swap-window -t +1
bind-key -r < swap-window -t -1

bind-key m run-shell '~/dotfiles/bin/tmux-toggle-monitor-silence 5'
# }}}

# Pane {{{
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
# Pane resize in all four directions using vi bindings.
bind-key -r H resize-pane -L 3
bind-key -r J resize-pane -D 3
bind-key -r K resize-pane -U 3
bind-key -r L resize-pane -R 3
# move current pane to a new window
bind-key T break-pane
# }}}

# Logging
bind-key P pipe-pane -o 'cat >> ~/#S-#I-#P.log' \; display "Toggled logging to ~/#S-#I-#P.log"

# kill pane, window, and session
bind-key x confirm-before kill-pane
bind-key X confirm-before kill-window
bind-key Q confirm-before kill-session
# }}}

# vi-like bindings
unbind [
bind-key Escape copy-mode
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe "xsel --clipboard --input"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "xsel --clipboard --input"

# Now for mouse
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xsel --clipboard --input"

# Scripting
# maximize current pane
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
# minimize
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp
# }}}

# tmux plugins ( https://github.com/tmux-plugins/tpm ) {{{
# List of plugins
# Supports `github_username/repo` or full git repo URLs
# set -g @tpm_plugins ' \
  # tmux-plugins/tpm \
  # tmux-plugins/tmux-resurrect \
  # tmux-plugins/tmux-copycat \
  # tmux-plugins/tmux-open \
  # tmux-plugins/tmux-yank \
# '

# for vim
# set -g @resurrect-strategy-vim 'session'

## tmux-resurrect {{{
# set -g @resurrect-processes ' \
  # irb \
  # pry \
  # "~rails server" \
  # "~rails console" \
  # "zeus start" \
  # "foreman start" \
# '
## }}}

## tmux-open {{{
# set -g @open 'x'
## }}}

## tmux-yank {{{
# set -g @copy_mode_put 'C-p'
# set -g @copy_mode_yank_put 'C-y'
## }}}

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
# run-shell '~/dotfiles/submodules/tpm/tpm'
# }}}

# vim: foldmethod=marker:filetype=tmux
